"""initial schema

Revision ID: bdcf829d60b3
Revises: 
Create Date: 2024-10-30 00:36:18.042428

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'bdcf829d60b3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('job_postings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.BigInteger(), nullable=True),
    sa.Column('company_name', sa.Text(), nullable=True),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('max_salary', sa.Float(), nullable=True),
    sa.Column('pay_period', sa.String(length=50), nullable=True),
    sa.Column('location', sa.Text(), nullable=True),
    sa.Column('company_id', sa.Float(), nullable=True),
    sa.Column('views', sa.Float(), nullable=True),
    sa.Column('med_salary', sa.Float(), nullable=True),
    sa.Column('min_salary', sa.Float(), nullable=True),
    sa.Column('formatted_work_type', sa.String(length=50), nullable=True),
    sa.Column('applies', sa.Float(), nullable=True),
    sa.Column('original_listed_time', sa.BigInteger(), nullable=True),
    sa.Column('remote_allowed', sa.Boolean(), nullable=True),
    sa.Column('job_posting_url', sa.Text(), nullable=True),
    sa.Column('application_url', sa.Text(), nullable=True),
    sa.Column('application_type', sa.String(length=50), nullable=True),
    sa.Column('expiry', sa.BigInteger(), nullable=True),
    sa.Column('closed_time', sa.BigInteger(), nullable=True),
    sa.Column('formatted_experience_level', sa.String(length=50), nullable=True),
    sa.Column('skills_desc', sa.Text(), nullable=True),
    sa.Column('listed_time', sa.BigInteger(), nullable=True),
    sa.Column('posting_domain', sa.Text(), nullable=True),
    sa.Column('sponsored', sa.Boolean(), nullable=True),
    sa.Column('work_type', sa.String(length=50), nullable=True),
    sa.Column('currency', sa.String(length=10), nullable=True),
    sa.Column('compensation_type', sa.String(length=50), nullable=True),
    sa.Column('normalized_salary', sa.Float(), nullable=True),
    sa.Column('zip_code', sa.String(length=10), nullable=True),
    sa.Column('fips', sa.String(length=10), nullable=True),
    sa.Column('processed_title', sa.Text(), nullable=True),
    sa.Column('processed_description', sa.Text(), nullable=True),
    sa.Column('processed_skills_desc', sa.Text(), nullable=True),
    sa.Column('job_category', sa.String(length=50), nullable=True),
    sa.Column('processed_min_salary', sa.Float(), nullable=True),
    sa.Column('processed_med_salary', sa.Float(), nullable=True),
    sa.Column('processed_max_salary', sa.Float(), nullable=True),
    sa.Column('processed_location', sa.String(length=100), nullable=True),
    sa.Column('processed_work_type', sa.String(length=50), nullable=True),
    sa.Column('description_embedding', pgvector.sqlalchemy.Vector(dim=768), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('job_id')
    )
    op.drop_table('postings_old')
    op.drop_table('postings')
    op.alter_column('career_recommendations', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('chat_histories', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('user_profiles', 'preference_rankings',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('user_profiles', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_profiles', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('user_profiles', 'preference_rankings',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('chat_histories', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('career_recommendations', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_table('postings',

    )
    op.create_table('postings_old',
    sa.Column('job_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('company_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('title', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('max_salary', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('pay_period', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('location', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('views', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('med_salary', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('min_salary', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('formatted_work_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('applies', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('remote_allowed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('job_posting_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('application_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('application_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('formatted_experience_level', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('skills_desc', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('posting_domain', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sponsored', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('work_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('currency', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('compensation_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('normalized_salary', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('zip_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('fips', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('processed_title', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('processed_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('processed_skills_desc', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('extracted_skills', postgresql.ARRAY(postgresql.JSONB(astext_type=sa.Text())), autoincrement=False, nullable=True),
    sa.Column('job_category', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('processed_min_salary', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('processed_med_salary', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('processed_max_salary', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('processed_location', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('processed_work_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('original_listed_time', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('expiry', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('closed_time', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('listed_time', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('job_id', name='postings_pkey')
    )
    op.drop_table('job_postings')
    # ### end Alembic commands ###
